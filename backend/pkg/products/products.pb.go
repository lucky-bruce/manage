// Code generated by protoc-gen-go. DO NOT EDIT.
// source: products/products.proto

package products

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Comment struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Rating               int32    `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{0}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Comment) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Comment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Comment) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Comment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Comments struct {
	Comments             []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Comments) Reset()         { *m = Comments{} }
func (m *Comments) String() string { return proto.CompactTextString(m) }
func (*Comments) ProtoMessage()    {}
func (*Comments) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{1}
}

func (m *Comments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comments.Unmarshal(m, b)
}
func (m *Comments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comments.Marshal(b, m, deterministic)
}
func (m *Comments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comments.Merge(m, src)
}
func (m *Comments) XXX_Size() int {
	return xxx_messageInfo_Comments.Size(m)
}
func (m *Comments) XXX_DiscardUnknown() {
	xxx_messageInfo_Comments.DiscardUnknown(m)
}

var xxx_messageInfo_Comments proto.InternalMessageInfo

func (m *Comments) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type ProductParams struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Jwt                  string   `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Query                *Query   `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductParams) Reset()         { *m = ProductParams{} }
func (m *ProductParams) String() string { return proto.CompactTextString(m) }
func (*ProductParams) ProtoMessage()    {}
func (*ProductParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{2}
}

func (m *ProductParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductParams.Unmarshal(m, b)
}
func (m *ProductParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductParams.Marshal(b, m, deterministic)
}
func (m *ProductParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductParams.Merge(m, src)
}
func (m *ProductParams) XXX_Size() int {
	return xxx_messageInfo_ProductParams.Size(m)
}
func (m *ProductParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductParams.DiscardUnknown(m)
}

var xxx_messageInfo_ProductParams proto.InternalMessageInfo

func (m *ProductParams) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProductParams) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *ProductParams) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type Query struct {
	Querystring          string   `protobuf:"bytes,1,opt,name=Querystring,proto3" json:"Querystring,omitempty"`
	SortFields           []string `protobuf:"bytes,2,rep,name=sortFields,proto3" json:"sortFields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{3}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetQuerystring() string {
	if m != nil {
		return m.Querystring
	}
	return ""
}

func (m *Query) GetSortFields() []string {
	if m != nil {
		return m.SortFields
	}
	return nil
}

type ProductResponse struct {
	Products             []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProductResponse) Reset()         { *m = ProductResponse{} }
func (m *ProductResponse) String() string { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()    {}
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{4}
}

func (m *ProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResponse.Unmarshal(m, b)
}
func (m *ProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResponse.Marshal(b, m, deterministic)
}
func (m *ProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResponse.Merge(m, src)
}
func (m *ProductResponse) XXX_Size() int {
	return xxx_messageInfo_ProductResponse.Size(m)
}
func (m *ProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResponse proto.InternalMessageInfo

func (m *ProductResponse) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{5}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type ImageResponse struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageResponse) Reset()         { *m = ImageResponse{} }
func (m *ImageResponse) String() string { return proto.CompactTextString(m) }
func (*ImageResponse) ProtoMessage()    {}
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{6}
}

func (m *ImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageResponse.Unmarshal(m, b)
}
func (m *ImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageResponse.Marshal(b, m, deterministic)
}
func (m *ImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageResponse.Merge(m, src)
}
func (m *ImageResponse) XXX_Size() int {
	return xxx_messageInfo_ImageResponse.Size(m)
}
func (m *ImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageResponse proto.InternalMessageInfo

func (m *ImageResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Image struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Ext                  string   `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{7}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Image) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

type Product struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Qtyinstock           int32    `protobuf:"varint,2,opt,name=qtyinstock,proto3" json:"qtyinstock,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Subcategory          string   `protobuf:"bytes,4,opt,name=subcategory,proto3" json:"subcategory,omitempty"`
	Sector               string   `protobuf:"bytes,5,opt,name=sector,proto3" json:"sector,omitempty"`
	Buyingprice          float32  `protobuf:"fixed32,6,opt,name=buyingprice,proto3" json:"buyingprice,omitempty"`
	Desiredprofit        float32  `protobuf:"fixed32,7,opt,name=desiredprofit,proto3" json:"desiredprofit,omitempty"`
	Sellingprice         float32  `protobuf:"fixed32,8,opt,name=sellingprice,proto3" json:"sellingprice,omitempty"`
	Addedtime            int64    `protobuf:"varint,9,opt,name=addedtime,proto3" json:"addedtime,omitempty"`
	Description          string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Id                   string   `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	Sizew                float32  `protobuf:"fixed32,12,opt,name=sizew,proto3" json:"sizew,omitempty"`
	Sizel                float32  `protobuf:"fixed32,13,opt,name=sizel,proto3" json:"sizel,omitempty"`
	Sized                float32  `protobuf:"fixed32,14,opt,name=sized,proto3" json:"sized,omitempty"`
	Sizeh                float32  `protobuf:"fixed32,15,opt,name=sizeh,proto3" json:"sizeh,omitempty"`
	Userid               string   `protobuf:"bytes,17,opt,name=userid,proto3" json:"userid,omitempty"`
	Images               []string `protobuf:"bytes,18,rep,name=images,proto3" json:"images,omitempty"`
	Barcode              string   `protobuf:"bytes,19,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Soldby               string   `protobuf:"bytes,20,opt,name=soldby,proto3" json:"soldby,omitempty"`
	Discount             float32  `protobuf:"fixed32,21,opt,name=discount,proto3" json:"discount,omitempty"`
	Brand                string   `protobuf:"bytes,22,opt,name=brand,proto3" json:"brand,omitempty"`
	Brandmodel           string   `protobuf:"bytes,23,opt,name=brandmodel,proto3" json:"brandmodel,omitempty"`
	Measurementunit      string   `protobuf:"bytes,25,opt,name=measurementunit,proto3" json:"measurementunit,omitempty"`
	Portionunit          string   `protobuf:"bytes,27,opt,name=portionunit,proto3" json:"portionunit,omitempty"`
	Portionvalue         float32  `protobuf:"fixed32,28,opt,name=portionvalue,proto3" json:"portionvalue,omitempty"`
	Minqtyinstock        uint32   `protobuf:"varint,29,opt,name=minqtyinstock,proto3" json:"minqtyinstock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b65708d5d9f169, []int{8}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetQtyinstock() int32 {
	if m != nil {
		return m.Qtyinstock
	}
	return 0
}

func (m *Product) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Product) GetSubcategory() string {
	if m != nil {
		return m.Subcategory
	}
	return ""
}

func (m *Product) GetSector() string {
	if m != nil {
		return m.Sector
	}
	return ""
}

func (m *Product) GetBuyingprice() float32 {
	if m != nil {
		return m.Buyingprice
	}
	return 0
}

func (m *Product) GetDesiredprofit() float32 {
	if m != nil {
		return m.Desiredprofit
	}
	return 0
}

func (m *Product) GetSellingprice() float32 {
	if m != nil {
		return m.Sellingprice
	}
	return 0
}

func (m *Product) GetAddedtime() int64 {
	if m != nil {
		return m.Addedtime
	}
	return 0
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetSizew() float32 {
	if m != nil {
		return m.Sizew
	}
	return 0
}

func (m *Product) GetSizel() float32 {
	if m != nil {
		return m.Sizel
	}
	return 0
}

func (m *Product) GetSized() float32 {
	if m != nil {
		return m.Sized
	}
	return 0
}

func (m *Product) GetSizeh() float32 {
	if m != nil {
		return m.Sizeh
	}
	return 0
}

func (m *Product) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *Product) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Product) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *Product) GetSoldby() string {
	if m != nil {
		return m.Soldby
	}
	return ""
}

func (m *Product) GetDiscount() float32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Product) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Product) GetBrandmodel() string {
	if m != nil {
		return m.Brandmodel
	}
	return ""
}

func (m *Product) GetMeasurementunit() string {
	if m != nil {
		return m.Measurementunit
	}
	return ""
}

func (m *Product) GetPortionunit() string {
	if m != nil {
		return m.Portionunit
	}
	return ""
}

func (m *Product) GetPortionvalue() float32 {
	if m != nil {
		return m.Portionvalue
	}
	return 0
}

func (m *Product) GetMinqtyinstock() uint32 {
	if m != nil {
		return m.Minqtyinstock
	}
	return 0
}

func init() {
	proto.RegisterType((*Comment)(nil), "products.Comment")
	proto.RegisterType((*Comments)(nil), "products.Comments")
	proto.RegisterType((*ProductParams)(nil), "products.ProductParams")
	proto.RegisterType((*Query)(nil), "products.Query")
	proto.RegisterType((*ProductResponse)(nil), "products.ProductResponse")
	proto.RegisterType((*EmptyResponse)(nil), "products.EmptyResponse")
	proto.RegisterType((*ImageResponse)(nil), "products.ImageResponse")
	proto.RegisterType((*Image)(nil), "products.Image")
	proto.RegisterType((*Product)(nil), "products.Product")
}

func init() { proto.RegisterFile("products/products.proto", fileDescriptor_a8b65708d5d9f169) }

var fileDescriptor_a8b65708d5d9f169 = []byte{
	// 772 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x4d, 0x6f, 0xdb, 0x38,
	0x10, 0x85, 0xec, 0x28, 0xb6, 0xc7, 0xb1, 0x9d, 0x70, 0xb3, 0x09, 0x93, 0xcd, 0x2e, 0xb4, 0xc2,
	0x2e, 0xa0, 0x4b, 0x13, 0xc0, 0x3d, 0xb4, 0x29, 0x7a, 0xe8, 0x47, 0xd2, 0x22, 0x97, 0x22, 0x55,
	0x51, 0xa0, 0x57, 0x59, 0x64, 0x1d, 0xb6, 0x92, 0xa8, 0x90, 0x54, 0x12, 0xf7, 0x3f, 0xf4, 0xc7,
	0xf6, 0xd2, 0x73, 0x41, 0x8a, 0x92, 0xe5, 0xa8, 0x2e, 0x7a, 0x9b, 0xf7, 0x38, 0x1c, 0x0e, 0x1f,
	0x1f, 0x49, 0xd8, 0xcf, 0x05, 0x27, 0x45, 0xac, 0xe4, 0x49, 0x15, 0x1c, 0xe7, 0x82, 0x2b, 0x8e,
	0xfa, 0x15, 0xf6, 0xbf, 0x3a, 0xd0, 0x7b, 0xc9, 0xd3, 0x94, 0x66, 0x0a, 0x1d, 0x42, 0xbf, 0x90,
	0x54, 0x64, 0x51, 0x4a, 0xb1, 0xe3, 0x39, 0xc1, 0x20, 0xac, 0x31, 0xda, 0x83, 0x4d, 0x11, 0x29,
	0x96, 0xcd, 0x71, 0xc7, 0x73, 0x02, 0x37, 0xb4, 0x08, 0x79, 0x30, 0x24, 0x54, 0xc6, 0x82, 0xe5,
	0x8a, 0xf1, 0x0c, 0x77, 0xcd, 0xb4, 0x26, 0x85, 0x8e, 0x60, 0xa0, 0x58, 0x4a, 0xa5, 0x8a, 0xd2,
	0x1c, 0x6f, 0x78, 0x4e, 0xd0, 0x0d, 0x97, 0x04, 0x1a, 0x43, 0x87, 0x11, 0xec, 0x9a, 0x69, 0x1d,
	0x46, 0xfc, 0x53, 0xe8, 0xdb, 0x76, 0x24, 0x7a, 0x00, 0xfd, 0xd8, 0xc6, 0xd8, 0xf1, 0xba, 0xc1,
	0x70, 0xba, 0x73, 0x5c, 0x6f, 0xc4, 0x66, 0x85, 0x75, 0x8a, 0xff, 0x01, 0x46, 0x97, 0xe5, 0xe8,
	0x65, 0x24, 0xa2, 0x54, 0xda, 0xda, 0x4e, 0x55, 0x1b, 0x6d, 0x43, 0xf7, 0xd3, 0xad, 0x32, 0x1b,
	0x18, 0x84, 0x3a, 0x44, 0xff, 0x83, 0x7b, 0x5d, 0x50, 0xb1, 0x30, 0x7d, 0x0d, 0xa7, 0x93, 0x65,
	0xf9, 0xb7, 0x9a, 0x0e, 0xcb, 0x51, 0xff, 0x02, 0x5c, 0x83, 0xf5, 0x6e, 0x4d, 0x20, 0x95, 0xd0,
	0x52, 0x94, 0xa5, 0x9b, 0x14, 0xfa, 0x07, 0x40, 0x72, 0xa1, 0x5e, 0x31, 0x9a, 0x10, 0x89, 0x3b,
	0x5e, 0x37, 0x18, 0x84, 0x0d, 0xc6, 0x7f, 0x06, 0x13, 0xdb, 0x64, 0x48, 0x65, 0xce, 0x33, 0x49,
	0xf5, 0x36, 0xab, 0x65, 0xdb, 0xdb, 0xac, 0x92, 0x97, 0x27, 0x36, 0x81, 0xd1, 0x79, 0x9a, 0xab,
	0x45, 0x35, 0xdf, 0xff, 0x17, 0x46, 0x17, 0x69, 0x34, 0xa7, 0x75, 0xc1, 0x6d, 0xe8, 0x16, 0x22,
	0xb1, 0xdd, 0xe9, 0xd0, 0x3f, 0x01, 0xd7, 0xa4, 0xa0, 0x5d, 0x70, 0x99, 0x0e, 0xec, 0x60, 0x09,
	0xf4, 0x04, 0x7a, 0x57, 0x0b, 0x43, 0xef, 0x94, 0xff, 0xcd, 0x85, 0x9e, 0x5d, 0x1a, 0x21, 0xd8,
	0x68, 0x58, 0xc2, 0xc4, 0x7a, 0x9b, 0xd7, 0x6a, 0xc1, 0x32, 0xa9, 0x78, 0xfc, 0xd9, 0x5a, 0xa2,
	0xc1, 0x68, 0x2b, 0xc5, 0x91, 0xa2, 0x73, 0x2e, 0x16, 0xd6, 0x13, 0x35, 0xd6, 0x22, 0xca, 0x62,
	0x56, 0x0f, 0x6f, 0x94, 0x22, 0x36, 0x28, 0x6d, 0x36, 0x49, 0x63, 0xc5, 0x85, 0x35, 0x86, 0x45,
	0x7a, 0xe6, 0xac, 0x58, 0xb0, 0x6c, 0x9e, 0x0b, 0x16, 0x53, 0xbc, 0xe9, 0x39, 0x41, 0x27, 0x6c,
	0x52, 0xe8, 0x3f, 0x18, 0x11, 0x2a, 0x99, 0xa0, 0x24, 0x17, 0xfc, 0x23, 0x53, 0xb8, 0x67, 0x72,
	0x56, 0x49, 0xe4, 0xc3, 0x96, 0xa4, 0x49, 0x52, 0x17, 0xea, 0x9b, 0xa4, 0x15, 0x4e, 0xdb, 0x36,
	0x22, 0x84, 0x12, 0x6d, 0x55, 0x3c, 0x28, 0x6d, 0x5b, 0x13, 0xf7, 0x6d, 0x0f, 0x6d, 0xdb, 0x97,
	0xe6, 0x1b, 0xd6, 0xe6, 0xdb, 0x05, 0x57, 0xb2, 0x2f, 0xf4, 0x16, 0x6f, 0x99, 0xc5, 0x4a, 0x50,
	0xb1, 0x09, 0x1e, 0x2d, 0xd9, 0xa4, 0x62, 0x09, 0x1e, 0x2f, 0xd9, 0xba, 0xc2, 0x15, 0x9e, 0x2c,
	0xd9, 0x2b, 0xad, 0x95, 0xbe, 0xa4, 0x8c, 0xe0, 0x9d, 0x52, 0xab, 0x12, 0x69, 0xde, 0x1c, 0xae,
	0xc4, 0xc8, 0x98, 0xd0, 0x22, 0x84, 0xa1, 0x37, 0x8b, 0x44, 0xcc, 0x09, 0xc5, 0x7f, 0x98, 0x09,
	0x15, 0x34, 0xaa, 0xf3, 0x84, 0xcc, 0x16, 0x78, 0xd7, 0xaa, 0x6e, 0x90, 0x3e, 0x4b, 0xc2, 0x64,
	0xcc, 0x8b, 0x4c, 0xe1, 0x3f, 0xcd, 0xd2, 0x35, 0xd6, 0x3d, 0xcd, 0x44, 0x94, 0x11, 0xbc, 0x57,
	0xfa, 0xc9, 0x00, 0xed, 0x0e, 0x13, 0xa4, 0x9c, 0xd0, 0x04, 0xef, 0x9b, 0xa1, 0x06, 0x83, 0x02,
	0x98, 0xa4, 0x34, 0x92, 0x85, 0xa0, 0xfa, 0xe6, 0x16, 0x19, 0x53, 0xf8, 0xc0, 0x24, 0xdd, 0xa7,
	0xb5, 0xce, 0x39, 0x17, 0x5a, 0x50, 0x93, 0xf5, 0x57, 0xa9, 0x73, 0x83, 0xd2, 0x67, 0x69, 0xe1,
	0x4d, 0x94, 0x14, 0x14, 0x1f, 0x95, 0x67, 0xd9, 0xe4, 0xb4, 0x2b, 0x52, 0x96, 0x35, 0x0c, 0xfb,
	0xb7, 0xe7, 0x04, 0xa3, 0x70, 0x95, 0x9c, 0x7e, 0xef, 0xc2, 0xd8, 0x7a, 0xfe, 0x1d, 0x15, 0x37,
	0xda, 0x04, 0x53, 0x80, 0x37, 0xf4, 0xb6, 0xba, 0x08, 0xed, 0x6b, 0x79, 0xd8, 0xa6, 0xd0, 0x73,
	0x18, 0xbe, 0xa6, 0xca, 0x22, 0x89, 0xf6, 0x5b, 0x19, 0xe5, 0xeb, 0x74, 0x78, 0xd0, 0xbe, 0xe4,
	0xd5, 0x05, 0x7e, 0x0a, 0xe3, 0x65, 0x89, 0x17, 0x8b, 0x8b, 0xb3, 0xf5, 0x55, 0x7e, 0xd2, 0xc0,
	0x29, 0x0c, 0xcf, 0x09, 0x53, 0xbf, 0xe8, 0xba, 0x51, 0x6d, 0xe5, 0x29, 0x41, 0xe7, 0xb0, 0x73,
	0x46, 0x13, 0xaa, 0xe8, 0x6f, 0xad, 0xbd, 0xb6, 0xcc, 0x23, 0x18, 0xbe, 0xcf, 0x13, 0x1e, 0x91,
	0xf2, 0xd1, 0x69, 0x3c, 0xab, 0x86, 0x68, 0x4e, 0x5c, 0x7d, 0xb9, 0x1e, 0x1b, 0xbd, 0xab, 0xff,
	0xa8, 0xfd, 0xda, 0xaf, 0x5f, 0xf2, 0x89, 0x51, 0xbd, 0xfe, 0x3a, 0xd6, 0xf6, 0x8c, 0x5a, 0x35,
	0xe5, 0x6c, 0xd3, 0x7c, 0x8a, 0x0f, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x97, 0x12, 0xd7, 0x07,
	0x2f, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductServiceClient is the client API for ProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductServiceClient interface {
	NewProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error)
	GetProducts(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*ProductResponse, error)
	GetProductByID(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*Product, error)
	EditProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*EmptyResponse, error)
	DeleteProductByID(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*EmptyResponse, error)
	UploadImage(ctx context.Context, in *Image, opts ...grpc.CallOption) (*ImageResponse, error)
	NewComment(ctx context.Context, in *Comment, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetComments(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*Comments, error)
}

type productServiceClient struct {
	cc *grpc.ClientConn
}

func NewProductServiceClient(cc *grpc.ClientConn) ProductServiceClient {
	return &productServiceClient{cc}
}

func (c *productServiceClient) NewProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/products.ProductService/NewProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetProducts(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := c.cc.Invoke(ctx, "/products.ProductService/GetProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetProductByID(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/products.ProductService/GetProductByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) EditProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/products.ProductService/EditProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteProductByID(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/products.ProductService/DeleteProductByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) UploadImage(ctx context.Context, in *Image, opts ...grpc.CallOption) (*ImageResponse, error) {
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, "/products.ProductService/UploadImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) NewComment(ctx context.Context, in *Comment, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/products.ProductService/NewComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetComments(ctx context.Context, in *ProductParams, opts ...grpc.CallOption) (*Comments, error) {
	out := new(Comments)
	err := c.cc.Invoke(ctx, "/products.ProductService/GetComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServiceServer is the server API for ProductService service.
type ProductServiceServer interface {
	NewProduct(context.Context, *Product) (*Product, error)
	GetProducts(context.Context, *ProductParams) (*ProductResponse, error)
	GetProductByID(context.Context, *ProductParams) (*Product, error)
	EditProduct(context.Context, *Product) (*EmptyResponse, error)
	DeleteProductByID(context.Context, *ProductParams) (*EmptyResponse, error)
	UploadImage(context.Context, *Image) (*ImageResponse, error)
	NewComment(context.Context, *Comment) (*EmptyResponse, error)
	GetComments(context.Context, *ProductParams) (*Comments, error)
}

// UnimplementedProductServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductServiceServer struct {
}

func (*UnimplementedProductServiceServer) NewProduct(ctx context.Context, req *Product) (*Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewProduct not implemented")
}
func (*UnimplementedProductServiceServer) GetProducts(ctx context.Context, req *ProductParams) (*ProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProducts not implemented")
}
func (*UnimplementedProductServiceServer) GetProductByID(ctx context.Context, req *ProductParams) (*Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductByID not implemented")
}
func (*UnimplementedProductServiceServer) EditProduct(ctx context.Context, req *Product) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditProduct not implemented")
}
func (*UnimplementedProductServiceServer) DeleteProductByID(ctx context.Context, req *ProductParams) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductByID not implemented")
}
func (*UnimplementedProductServiceServer) UploadImage(ctx context.Context, req *Image) (*ImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadImage not implemented")
}
func (*UnimplementedProductServiceServer) NewComment(ctx context.Context, req *Comment) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewComment not implemented")
}
func (*UnimplementedProductServiceServer) GetComments(ctx context.Context, req *ProductParams) (*Comments, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComments not implemented")
}

func RegisterProductServiceServer(s *grpc.Server, srv ProductServiceServer) {
	s.RegisterService(&_ProductService_serviceDesc, srv)
}

func _ProductService_NewProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).NewProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/NewProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).NewProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetProducts(ctx, req.(*ProductParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetProductByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetProductByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/GetProductByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetProductByID(ctx, req.(*ProductParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_EditProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).EditProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/EditProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).EditProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteProductByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteProductByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/DeleteProductByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteProductByID(ctx, req.(*ProductParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_UploadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Image)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).UploadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/UploadImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).UploadImage(ctx, req.(*Image))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_NewComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Comment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).NewComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/NewComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).NewComment(ctx, req.(*Comment))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/products.ProductService/GetComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetComments(ctx, req.(*ProductParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "products.ProductService",
	HandlerType: (*ProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewProduct",
			Handler:    _ProductService_NewProduct_Handler,
		},
		{
			MethodName: "GetProducts",
			Handler:    _ProductService_GetProducts_Handler,
		},
		{
			MethodName: "GetProductByID",
			Handler:    _ProductService_GetProductByID_Handler,
		},
		{
			MethodName: "EditProduct",
			Handler:    _ProductService_EditProduct_Handler,
		},
		{
			MethodName: "DeleteProductByID",
			Handler:    _ProductService_DeleteProductByID_Handler,
		},
		{
			MethodName: "UploadImage",
			Handler:    _ProductService_UploadImage_Handler,
		},
		{
			MethodName: "NewComment",
			Handler:    _ProductService_NewComment_Handler,
		},
		{
			MethodName: "GetComments",
			Handler:    _ProductService_GetComments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "products/products.proto",
}
