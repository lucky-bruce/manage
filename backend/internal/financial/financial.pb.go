// Code generated by protoc-gen-go. DO NOT EDIT.
// source: financial/financial.proto

package financial

import (
	context "context"
	fmt "fmt"
	math "math"

	"github.com/Beaxhem/manage/backend/internal/products"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8d8ee334e6c4413, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8d8ee334e6c4413, []int{1}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type Params struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount               float32         `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	To                   string          `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Query                *products.Query `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8d8ee334e6c4413, []int{2}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Params) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Params) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Params) GetQuery() *products.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type Payoff struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Amount               float32  `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Supplierid           string   `protobuf:"bytes,4,opt,name=supplierid,proto3" json:"supplierid,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payoff) Reset()         { *m = Payoff{} }
func (m *Payoff) String() string { return proto.CompactTextString(m) }
func (*Payoff) ProtoMessage()    {}
func (*Payoff) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8d8ee334e6c4413, []int{3}
}

func (m *Payoff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payoff.Unmarshal(m, b)
}
func (m *Payoff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payoff.Marshal(b, m, deterministic)
}
func (m *Payoff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payoff.Merge(m, src)
}
func (m *Payoff) XXX_Size() int {
	return xxx_messageInfo_Payoff.Size(m)
}
func (m *Payoff) XXX_DiscardUnknown() {
	xxx_messageInfo_Payoff.DiscardUnknown(m)
}

var xxx_messageInfo_Payoff proto.InternalMessageInfo

func (m *Payoff) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Payoff) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Payoff) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payoff) GetSupplierid() string {
	if m != nil {
		return m.Supplierid
	}
	return ""
}

func (m *Payoff) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Income               []*Payoff `protobuf:"bytes,1,rep,name=income,proto3" json:"income,omitempty"`
	Banks                []*Bank   `protobuf:"bytes,2,rep,name=banks,proto3" json:"banks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8d8ee334e6c4413, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetIncome() []*Payoff {
	if m != nil {
		return m.Income
	}
	return nil
}

func (m *Response) GetBanks() []*Bank {
	if m != nil {
		return m.Banks
	}
	return nil
}

type Bank struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Money                float32  `protobuf:"fixed32,2,opt,name=money,proto3" json:"money,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bank) Reset()         { *m = Bank{} }
func (m *Bank) String() string { return proto.CompactTextString(m) }
func (*Bank) ProtoMessage()    {}
func (*Bank) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8d8ee334e6c4413, []int{5}
}

func (m *Bank) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bank.Unmarshal(m, b)
}
func (m *Bank) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bank.Marshal(b, m, deterministic)
}
func (m *Bank) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bank.Merge(m, src)
}
func (m *Bank) XXX_Size() int {
	return xxx_messageInfo_Bank.Size(m)
}
func (m *Bank) XXX_DiscardUnknown() {
	xxx_messageInfo_Bank.DiscardUnknown(m)
}

var xxx_messageInfo_Bank proto.InternalMessageInfo

func (m *Bank) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bank) GetMoney() float32 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *Bank) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "financial.Request")
	proto.RegisterType((*EmptyResponse)(nil), "financial.EmptyResponse")
	proto.RegisterType((*Params)(nil), "financial.Params")
	proto.RegisterType((*Payoff)(nil), "financial.Payoff")
	proto.RegisterType((*Response)(nil), "financial.Response")
	proto.RegisterType((*Bank)(nil), "financial.Bank")
}

func init() { proto.RegisterFile("financial/financial.proto", fileDescriptor_a8d8ee334e6c4413) }

var fileDescriptor_a8d8ee334e6c4413 = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x24, 0x69, 0x9b, 0x36, 0xaf, 0xd4, 0xea, 0x2a, 0x1a, 0x8b, 0x48, 0x09, 0x08, 0xf1, 0xd2,
	0x42, 0x2b, 0x78, 0x17, 0x6d, 0xf1, 0x22, 0xba, 0x7a, 0xf4, 0xb2, 0x4d, 0xb6, 0xb0, 0xb4, 0xd9,
	0x4d, 0xb3, 0x1b, 0x25, 0x57, 0xff, 0xae, 0x7f, 0x42, 0xb2, 0xf9, 0x68, 0x2a, 0x45, 0xbc, 0xbd,
	0x99, 0x1d, 0x32, 0x33, 0x2f, 0x0f, 0xce, 0x97, 0x8c, 0x13, 0xee, 0x33, 0xb2, 0x1e, 0x57, 0xd3,
	0x28, 0x8a, 0x85, 0x12, 0xc8, 0xae, 0x88, 0xc1, 0x59, 0x14, 0x8b, 0x20, 0xf1, 0x95, 0x1c, 0x97,
	0x43, 0xae, 0x71, 0x6d, 0x68, 0x63, 0xba, 0x49, 0xa8, 0x54, 0x6e, 0x1f, 0x7a, 0x0f, 0x61, 0xa4,
	0x52, 0x4c, 0x65, 0x24, 0xb8, 0xa4, 0xee, 0x0a, 0xac, 0x67, 0x12, 0x93, 0x50, 0x22, 0x04, 0x4d,
	0x4e, 0x42, 0xea, 0x18, 0x43, 0xc3, 0xb3, 0xb1, 0x9e, 0xd1, 0x29, 0x58, 0x24, 0x14, 0x09, 0x57,
	0x8e, 0x39, 0x34, 0x3c, 0x13, 0x17, 0x08, 0x1d, 0x80, 0xa9, 0x84, 0xd3, 0xd0, 0x4a, 0x53, 0x09,
	0x74, 0x05, 0xad, 0x4d, 0x42, 0xe3, 0xd4, 0x69, 0x0e, 0x0d, 0xaf, 0x3b, 0xe9, 0x8f, 0xaa, 0x04,
	0x2f, 0x19, 0x8d, 0xf3, 0x57, 0xf7, 0xcb, 0xc8, 0xdc, 0x52, 0xb1, 0x5c, 0xa2, 0x0b, 0xb0, 0x15,
	0x0b, 0xa9, 0x54, 0x24, 0x8c, 0xb4, 0x65, 0x03, 0x6f, 0x89, 0xbf, 0x7c, 0x59, 0x50, 0xfa, 0xb2,
	0x00, 0x5d, 0x02, 0xc8, 0x24, 0x8a, 0xd6, 0x8c, 0xc6, 0x2c, 0xd0, 0xe6, 0x36, 0xae, 0x31, 0x55,
	0xa7, 0xd6, 0xb6, 0x93, 0xfb, 0x0e, 0x9d, 0xb2, 0x3d, 0xba, 0x06, 0x8b, 0x71, 0x5f, 0xe8, 0xd6,
	0x0d, 0xaf, 0x3b, 0x39, 0x1a, 0x6d, 0xf7, 0x9b, 0x07, 0xc5, 0x85, 0x20, 0xab, 0xb8, 0x20, 0x7c,
	0x25, 0x1d, 0x53, 0x2b, 0xfb, 0x35, 0xe5, 0x1d, 0xe1, 0x2b, 0x9c, 0xbf, 0xba, 0x33, 0x68, 0x66,
	0x70, 0xef, 0x36, 0x4f, 0xa0, 0x15, 0x0a, 0x4e, 0xd3, 0xa2, 0x54, 0x0e, 0x32, 0xd6, 0x17, 0x6b,
	0x11, 0x17, 0xb5, 0x72, 0x30, 0xf9, 0x36, 0xe0, 0x70, 0x56, 0x3a, 0xbc, 0xd2, 0xf8, 0x83, 0xf9,
	0x14, 0x4d, 0xc1, 0x9e, 0x53, 0xf5, 0x98, 0x07, 0xda, 0xcd, 0x9a, 0xfd, 0xc2, 0xc1, 0x71, 0x8d,
	0xaa, 0x3a, 0xde, 0x40, 0xfb, 0x89, 0x7e, 0xea, 0x50, 0xbf, 0x43, 0x0f, 0x9c, 0x1a, 0xb1, 0x73,
	0x17, 0x68, 0x0a, 0x9d, 0x39, 0x55, 0x99, 0x48, 0x22, 0xb4, 0xf3, 0x59, 0x7d, 0x48, 0xfb, 0xad,
	0x6e, 0xa1, 0xf7, 0x26, 0xee, 0xa9, 0x54, 0x8c, 0x13, 0xc5, 0x04, 0xff, 0x6f, 0xc6, 0x85, 0xa5,
	0x0f, 0x75, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x63, 0x5c, 0x41, 0x27, 0xe9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FinancialServiceClient is the client API for FinancialService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FinancialServiceClient interface {
	GetIncome(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
	NewBank(ctx context.Context, in *Bank, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetBanks(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ToDestination(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
}

type financialServiceClient struct {
	cc *grpc.ClientConn
}

func NewFinancialServiceClient(cc *grpc.ClientConn) FinancialServiceClient {
	return &financialServiceClient{cc}
}

func (c *financialServiceClient) GetIncome(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/financial.FinancialService/GetIncome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financialServiceClient) NewBank(ctx context.Context, in *Bank, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/financial.FinancialService/NewBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financialServiceClient) GetBanks(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/financial.FinancialService/GetBanks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financialServiceClient) ToDestination(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/financial.FinancialService/ToDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinancialServiceServer is the server API for FinancialService service.
type FinancialServiceServer interface {
	GetIncome(context.Context, *Params) (*Response, error)
	NewBank(context.Context, *Bank) (*EmptyResponse, error)
	GetBanks(context.Context, *Request) (*Response, error)
	ToDestination(context.Context, *Params) (*Response, error)
}

// UnimplementedFinancialServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFinancialServiceServer struct {
}

func (*UnimplementedFinancialServiceServer) GetIncome(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIncome not implemented")
}
func (*UnimplementedFinancialServiceServer) NewBank(ctx context.Context, req *Bank) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBank not implemented")
}
func (*UnimplementedFinancialServiceServer) GetBanks(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBanks not implemented")
}
func (*UnimplementedFinancialServiceServer) ToDestination(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToDestination not implemented")
}

func RegisterFinancialServiceServer(s *grpc.Server, srv FinancialServiceServer) {
	s.RegisterService(&_FinancialService_serviceDesc, srv)
}

func _FinancialService_GetIncome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinancialServiceServer).GetIncome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/financial.FinancialService/GetIncome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinancialServiceServer).GetIncome(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinancialService_NewBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinancialServiceServer).NewBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/financial.FinancialService/NewBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinancialServiceServer).NewBank(ctx, req.(*Bank))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinancialService_GetBanks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinancialServiceServer).GetBanks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/financial.FinancialService/GetBanks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinancialServiceServer).GetBanks(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinancialService_ToDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinancialServiceServer).ToDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/financial.FinancialService/ToDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinancialServiceServer).ToDestination(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

var _FinancialService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "financial.FinancialService",
	HandlerType: (*FinancialServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIncome",
			Handler:    _FinancialService_GetIncome_Handler,
		},
		{
			MethodName: "NewBank",
			Handler:    _FinancialService_NewBank_Handler,
		},
		{
			MethodName: "GetBanks",
			Handler:    _FinancialService_GetBanks_Handler,
		},
		{
			MethodName: "ToDestination",
			Handler:    _FinancialService_ToDestination_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "financial/financial.proto",
}
