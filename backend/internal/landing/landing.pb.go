// Code generated by protoc-gen-go. DO NOT EDIT.
// source: landing/landing.proto

package landing

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Basic struct {
	Sitename             string   `protobuf:"bytes,1,opt,name=sitename,proto3" json:"sitename,omitempty"`
	Primaryemail         string   `protobuf:"bytes,2,opt,name=primaryemail,proto3" json:"primaryemail,omitempty"`
	Secondaryemail       string   `protobuf:"bytes,3,opt,name=secondaryemail,proto3" json:"secondaryemail,omitempty"`
	Primaryphone         string   `protobuf:"bytes,4,opt,name=primaryphone,proto3" json:"primaryphone,omitempty"`
	Workinghours         string   `protobuf:"bytes,5,opt,name=workinghours,proto3" json:"workinghours,omitempty"`
	Address1             string   `protobuf:"bytes,6,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2             string   `protobuf:"bytes,7,opt,name=address2,proto3" json:"address2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Basic) Reset()         { *m = Basic{} }
func (m *Basic) String() string { return proto.CompactTextString(m) }
func (*Basic) ProtoMessage()    {}
func (*Basic) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{0}
}

func (m *Basic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Basic.Unmarshal(m, b)
}
func (m *Basic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Basic.Marshal(b, m, deterministic)
}
func (m *Basic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Basic.Merge(m, src)
}
func (m *Basic) XXX_Size() int {
	return xxx_messageInfo_Basic.Size(m)
}
func (m *Basic) XXX_DiscardUnknown() {
	xxx_messageInfo_Basic.DiscardUnknown(m)
}

var xxx_messageInfo_Basic proto.InternalMessageInfo

func (m *Basic) GetSitename() string {
	if m != nil {
		return m.Sitename
	}
	return ""
}

func (m *Basic) GetPrimaryemail() string {
	if m != nil {
		return m.Primaryemail
	}
	return ""
}

func (m *Basic) GetSecondaryemail() string {
	if m != nil {
		return m.Secondaryemail
	}
	return ""
}

func (m *Basic) GetPrimaryphone() string {
	if m != nil {
		return m.Primaryphone
	}
	return ""
}

func (m *Basic) GetWorkinghours() string {
	if m != nil {
		return m.Workinghours
	}
	return ""
}

func (m *Basic) GetAddress1() string {
	if m != nil {
		return m.Address1
	}
	return ""
}

func (m *Basic) GetAddress2() string {
	if m != nil {
		return m.Address2
	}
	return ""
}

type Teams struct {
	Teams                []*Team  `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Teams) Reset()         { *m = Teams{} }
func (m *Teams) String() string { return proto.CompactTextString(m) }
func (*Teams) ProtoMessage()    {}
func (*Teams) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{1}
}

func (m *Teams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Teams.Unmarshal(m, b)
}
func (m *Teams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Teams.Marshal(b, m, deterministic)
}
func (m *Teams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Teams.Merge(m, src)
}
func (m *Teams) XXX_Size() int {
	return xxx_messageInfo_Teams.Size(m)
}
func (m *Teams) XXX_DiscardUnknown() {
	xxx_messageInfo_Teams.DiscardUnknown(m)
}

var xxx_messageInfo_Teams proto.InternalMessageInfo

func (m *Teams) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type Team struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rating               float32  `protobuf:"fixed32,2,opt,name=rating,proto3" json:"rating,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{2}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Team) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Team) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Team) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Portfolio struct {
	Details              string   `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Sector               string   `protobuf:"bytes,2,opt,name=sector,proto3" json:"sector,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Portfolio) Reset()         { *m = Portfolio{} }
func (m *Portfolio) String() string { return proto.CompactTextString(m) }
func (*Portfolio) ProtoMessage()    {}
func (*Portfolio) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{3}
}

func (m *Portfolio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Portfolio.Unmarshal(m, b)
}
func (m *Portfolio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Portfolio.Marshal(b, m, deterministic)
}
func (m *Portfolio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Portfolio.Merge(m, src)
}
func (m *Portfolio) XXX_Size() int {
	return xxx_messageInfo_Portfolio.Size(m)
}
func (m *Portfolio) XXX_DiscardUnknown() {
	xxx_messageInfo_Portfolio.DiscardUnknown(m)
}

var xxx_messageInfo_Portfolio proto.InternalMessageInfo

func (m *Portfolio) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Portfolio) GetSector() string {
	if m != nil {
		return m.Sector
	}
	return ""
}

func (m *Portfolio) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Portfolio) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Portfolio) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Mix struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mix) Reset()         { *m = Mix{} }
func (m *Mix) String() string { return proto.CompactTextString(m) }
func (*Mix) ProtoMessage()    {}
func (*Mix) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{4}
}

func (m *Mix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mix.Unmarshal(m, b)
}
func (m *Mix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mix.Marshal(b, m, deterministic)
}
func (m *Mix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mix.Merge(m, src)
}
func (m *Mix) XXX_Size() int {
	return xxx_messageInfo_Mix.Size(m)
}
func (m *Mix) XXX_DiscardUnknown() {
	xxx_messageInfo_Mix.DiscardUnknown(m)
}

var xxx_messageInfo_Mix proto.InternalMessageInfo

func (m *Mix) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Mix) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Mix) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type Mixes struct {
	Mixes                []*Mix   `protobuf:"bytes,1,rep,name=mixes,proto3" json:"mixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mixes) Reset()         { *m = Mixes{} }
func (m *Mixes) String() string { return proto.CompactTextString(m) }
func (*Mixes) ProtoMessage()    {}
func (*Mixes) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{5}
}

func (m *Mixes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mixes.Unmarshal(m, b)
}
func (m *Mixes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mixes.Marshal(b, m, deterministic)
}
func (m *Mixes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mixes.Merge(m, src)
}
func (m *Mixes) XXX_Size() int {
	return xxx_messageInfo_Mixes.Size(m)
}
func (m *Mixes) XXX_DiscardUnknown() {
	xxx_messageInfo_Mixes.DiscardUnknown(m)
}

var xxx_messageInfo_Mixes proto.InternalMessageInfo

func (m *Mixes) GetMixes() []*Mix {
	if m != nil {
		return m.Mixes
	}
	return nil
}

type Portfolios struct {
	Portfolios           []*Portfolio `protobuf:"bytes,1,rep,name=portfolios,proto3" json:"portfolios,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Portfolios) Reset()         { *m = Portfolios{} }
func (m *Portfolios) String() string { return proto.CompactTextString(m) }
func (*Portfolios) ProtoMessage()    {}
func (*Portfolios) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{6}
}

func (m *Portfolios) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Portfolios.Unmarshal(m, b)
}
func (m *Portfolios) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Portfolios.Marshal(b, m, deterministic)
}
func (m *Portfolios) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Portfolios.Merge(m, src)
}
func (m *Portfolios) XXX_Size() int {
	return xxx_messageInfo_Portfolios.Size(m)
}
func (m *Portfolios) XXX_DiscardUnknown() {
	xxx_messageInfo_Portfolios.DiscardUnknown(m)
}

var xxx_messageInfo_Portfolios proto.InternalMessageInfo

func (m *Portfolios) GetPortfolios() []*Portfolio {
	if m != nil {
		return m.Portfolios
	}
	return nil
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{7}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type Params struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{8}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Params) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Sector struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sector) Reset()         { *m = Sector{} }
func (m *Sector) String() string { return proto.CompactTextString(m) }
func (*Sector) ProtoMessage()    {}
func (*Sector) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{9}
}

func (m *Sector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sector.Unmarshal(m, b)
}
func (m *Sector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sector.Marshal(b, m, deterministic)
}
func (m *Sector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sector.Merge(m, src)
}
func (m *Sector) XXX_Size() int {
	return xxx_messageInfo_Sector.Size(m)
}
func (m *Sector) XXX_DiscardUnknown() {
	xxx_messageInfo_Sector.DiscardUnknown(m)
}

var xxx_messageInfo_Sector proto.InternalMessageInfo

func (m *Sector) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Sector) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Sector) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type Sectors struct {
	Sectors              []*Sector `protobuf:"bytes,1,rep,name=sectors,proto3" json:"sectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Sectors) Reset()         { *m = Sectors{} }
func (m *Sectors) String() string { return proto.CompactTextString(m) }
func (*Sectors) ProtoMessage()    {}
func (*Sectors) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{10}
}

func (m *Sectors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sectors.Unmarshal(m, b)
}
func (m *Sectors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sectors.Marshal(b, m, deterministic)
}
func (m *Sectors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sectors.Merge(m, src)
}
func (m *Sectors) XXX_Size() int {
	return xxx_messageInfo_Sectors.Size(m)
}
func (m *Sectors) XXX_DiscardUnknown() {
	xxx_messageInfo_Sectors.DiscardUnknown(m)
}

var xxx_messageInfo_Sectors proto.InternalMessageInfo

func (m *Sectors) GetSectors() []*Sector {
	if m != nil {
		return m.Sectors
	}
	return nil
}

type News struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Sector               string   `protobuf:"bytes,3,opt,name=sector,proto3" json:"sector,omitempty"`
	Image                string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *News) Reset()         { *m = News{} }
func (m *News) String() string { return proto.CompactTextString(m) }
func (*News) ProtoMessage()    {}
func (*News) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{11}
}

func (m *News) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_News.Unmarshal(m, b)
}
func (m *News) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_News.Marshal(b, m, deterministic)
}
func (m *News) XXX_Merge(src proto.Message) {
	xxx_messageInfo_News.Merge(m, src)
}
func (m *News) XXX_Size() int {
	return xxx_messageInfo_News.Size(m)
}
func (m *News) XXX_DiscardUnknown() {
	xxx_messageInfo_News.DiscardUnknown(m)
}

var xxx_messageInfo_News proto.InternalMessageInfo

func (m *News) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *News) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *News) GetSector() string {
	if m != nil {
		return m.Sector
	}
	return ""
}

func (m *News) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type NewsList struct {
	News                 []*News  `protobuf:"bytes,1,rep,name=news,proto3" json:"news,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewsList) Reset()         { *m = NewsList{} }
func (m *NewsList) String() string { return proto.CompactTextString(m) }
func (*NewsList) ProtoMessage()    {}
func (*NewsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352e6f3f8b358066, []int{12}
}

func (m *NewsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewsList.Unmarshal(m, b)
}
func (m *NewsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewsList.Marshal(b, m, deterministic)
}
func (m *NewsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewsList.Merge(m, src)
}
func (m *NewsList) XXX_Size() int {
	return xxx_messageInfo_NewsList.Size(m)
}
func (m *NewsList) XXX_DiscardUnknown() {
	xxx_messageInfo_NewsList.DiscardUnknown(m)
}

var xxx_messageInfo_NewsList proto.InternalMessageInfo

func (m *NewsList) GetNews() []*News {
	if m != nil {
		return m.News
	}
	return nil
}

func init() {
	proto.RegisterType((*Basic)(nil), "Basic")
	proto.RegisterType((*Teams)(nil), "Teams")
	proto.RegisterType((*Team)(nil), "Team")
	proto.RegisterType((*Portfolio)(nil), "Portfolio")
	proto.RegisterType((*Mix)(nil), "Mix")
	proto.RegisterType((*Mixes)(nil), "Mixes")
	proto.RegisterType((*Portfolios)(nil), "Portfolios")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*Params)(nil), "Params")
	proto.RegisterType((*Sector)(nil), "Sector")
	proto.RegisterType((*Sectors)(nil), "Sectors")
	proto.RegisterType((*News)(nil), "News")
	proto.RegisterType((*NewsList)(nil), "NewsList")
}

func init() { proto.RegisterFile("landing/landing.proto", fileDescriptor_352e6f3f8b358066) }

var fileDescriptor_352e6f3f8b358066 = []byte{
	// 654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x56, 0x12, 0xff, 0x24, 0xd3, 0x52, 0xa4, 0x15, 0x20, 0xb7, 0x05, 0x35, 0x18, 0x8a, 0x2a,
	0x54, 0x19, 0x11, 0x2e, 0x9c, 0x11, 0x52, 0x2e, 0x6d, 0x54, 0xb9, 0x88, 0xbb, 0x89, 0x87, 0x74,
	0x85, 0xff, 0xe4, 0x5d, 0x70, 0x38, 0x72, 0xe3, 0x99, 0x78, 0x29, 0x5e, 0x01, 0xed, 0x8e, 0xbd,
	0x59, 0x27, 0xe1, 0x82, 0x38, 0x65, 0xe7, 0x9b, 0x9f, 0x9d, 0x6f, 0xe6, 0x5b, 0x07, 0x1e, 0x66,
	0x49, 0x91, 0xf2, 0x62, 0xf5, 0xaa, 0xfd, 0x8d, 0xaa, 0xba, 0x94, 0x65, 0xf8, 0x7b, 0x00, 0xee,
	0xbb, 0x44, 0xf0, 0x25, 0x3b, 0x81, 0xb1, 0xe0, 0x12, 0x8b, 0x24, 0xc7, 0x60, 0x30, 0x1d, 0x5c,
	0x4c, 0x62, 0x63, 0xb3, 0x10, 0x0e, 0xab, 0x9a, 0xe7, 0x49, 0xfd, 0x1d, 0xf3, 0x84, 0x67, 0xc1,
	0x50, 0xfb, 0x7b, 0x18, 0x7b, 0x01, 0x47, 0x02, 0x97, 0x65, 0x91, 0x9a, 0xa8, 0x91, 0x8e, 0xda,
	0x42, 0xad, 0x5a, 0xd5, 0x5d, 0x59, 0x60, 0xe0, 0xf4, 0x6a, 0x69, 0x4c, 0xc5, 0x34, 0x65, 0xfd,
	0x85, 0x17, 0xab, 0xbb, 0xf2, 0x6b, 0x2d, 0x02, 0x97, 0x62, 0x6c, 0x4c, 0xf5, 0x9b, 0xa4, 0x69,
	0x8d, 0x42, 0xbc, 0x0e, 0x3c, 0xea, 0xb7, 0xb3, 0x2d, 0xdf, 0x2c, 0xf0, 0x7b, 0xbe, 0x59, 0xf8,
	0x1c, 0xdc, 0x0f, 0x98, 0xe4, 0x82, 0x9d, 0x82, 0x2b, 0xd5, 0x21, 0x18, 0x4c, 0x47, 0x17, 0x07,
	0x33, 0x37, 0x52, 0x70, 0x4c, 0x58, 0xf8, 0x73, 0x00, 0x8e, 0xb2, 0x19, 0x03, 0xc7, 0x1a, 0x89,
	0x3e, 0xb3, 0x47, 0xe0, 0xd5, 0x89, 0xe4, 0xc5, 0x4a, 0x0f, 0x62, 0x18, 0xb7, 0x16, 0x7b, 0x00,
	0x2e, 0xcf, 0x93, 0x15, 0xb6, 0xcc, 0xc9, 0x60, 0x53, 0x38, 0x48, 0x51, 0x2c, 0x6b, 0x5e, 0x49,
	0x5e, 0x16, 0x2d, 0x5f, 0x1b, 0x62, 0x8f, 0x61, 0x22, 0x79, 0x8e, 0x42, 0x26, 0x79, 0xa5, 0xb9,
	0x8e, 0xe2, 0x0d, 0x10, 0xfe, 0x18, 0xc0, 0xe4, 0xa6, 0xac, 0xe5, 0xe7, 0x32, 0xe3, 0x25, 0x0b,
	0xc0, 0x4f, 0x51, 0x26, 0x3c, 0x13, 0x6d, 0x4b, 0x9d, 0xa9, 0xba, 0x12, 0xb8, 0x94, 0x65, 0xdd,
	0xae, 0xa7, 0xb5, 0xfe, 0xd2, 0x55, 0xef, 0x4e, 0x67, 0xeb, 0x4e, 0x76, 0x04, 0x43, 0x9e, 0xb6,
	0x63, 0x1f, 0xf2, 0x34, 0xbc, 0x85, 0xd1, 0x35, 0x5f, 0xab, 0x52, 0x92, 0xcb, 0xac, 0x9b, 0x06,
	0x19, 0xdb, 0x04, 0x87, 0xbb, 0x04, 0xf7, 0xb6, 0x10, 0x3e, 0x03, 0xf7, 0x9a, 0xaf, 0x51, 0xad,
	0xd2, 0xcd, 0xd5, 0xa1, 0xdd, 0x84, 0x13, 0x5d, 0xf3, 0x75, 0x4c, 0x50, 0xf8, 0x16, 0xc0, 0x90,
	0x17, 0xec, 0x25, 0x40, 0x65, 0xac, 0x36, 0x1c, 0x22, 0x13, 0x10, 0x5b, 0xde, 0x10, 0x60, 0x1c,
	0xa3, 0xa8, 0xca, 0x42, 0x60, 0x78, 0x09, 0xde, 0x4d, 0x52, 0xab, 0xad, 0xef, 0xdb, 0x27, 0xb1,
	0x1d, 0x1a, 0xb6, 0x1f, 0xc1, 0xbb, 0x35, 0xb3, 0xfb, 0x8f, 0x84, 0x2f, 0xc1, 0xa7, 0xba, 0x82,
	0x3d, 0x05, 0x9f, 0xd6, 0xd3, 0xb1, 0xf0, 0x23, 0x72, 0xc5, 0x1d, 0x1e, 0x66, 0xe0, 0x2c, 0xb0,
	0x11, 0xff, 0xdc, 0xc3, 0x46, 0x0f, 0xa3, 0xfd, 0x7a, 0x70, 0xec, 0xde, 0xce, 0x61, 0xac, 0x6e,
	0xbb, 0xe2, 0x42, 0xb2, 0x63, 0x70, 0x0a, 0x6c, 0x36, 0x0f, 0x43, 0x39, 0x62, 0x0d, 0xcd, 0x7e,
	0x39, 0x70, 0x74, 0x45, 0x5f, 0x90, 0x5b, 0xac, 0xbf, 0xf1, 0x25, 0xb2, 0x53, 0xf0, 0x17, 0xd8,
	0xe8, 0xc7, 0x42, 0x6f, 0xe8, 0x64, 0x12, 0x75, 0x83, 0x67, 0xa7, 0x30, 0x9e, 0xa3, 0xa4, 0x07,
	0xe7, 0x47, 0xb4, 0x83, 0x13, 0x2f, 0x22, 0x60, 0x0a, 0xf0, 0x1e, 0x33, 0x94, 0xa8, 0x93, 0x8d,
	0xdb, 0x4a, 0x3f, 0x87, 0xc3, 0x05, 0x36, 0x1b, 0xf5, 0x5b, 0xbb, 0xee, 0x87, 0xdd, 0x9b, 0xa3,
	0xb4, 0x74, 0x62, 0x6a, 0x1d, 0x44, 0x16, 0x7a, 0x0e, 0xf7, 0xe9, 0xbe, 0x4d, 0xc1, 0x7d, 0x97,
	0x1e, 0x83, 0xb7, 0xc0, 0x46, 0xe9, 0x5d, 0x2b, 0x71, 0x97, 0x0e, 0xa9, 0xd6, 0xa2, 0x43, 0xc0,
	0x19, 0x4c, 0xa8, 0xbc, 0x4a, 0xdd, 0x57, 0xf8, 0x89, 0x9e, 0x31, 0x7d, 0x6e, 0xbd, 0x48, 0xff,
	0xee, 0x16, 0x27, 0xb7, 0x55, 0x9c, 0x80, 0x33, 0x98, 0x2c, 0xb0, 0x69, 0x65, 0xd9, 0x89, 0xc5,
	0xce, 0x3e, 0x03, 0x98, 0xa3, 0xec, 0xf4, 0x65, 0xf2, 0xc7, 0x51, 0x07, 0x85, 0x70, 0x48, 0xed,
	0x99, 0x22, 0xbb, 0x1d, 0xd2, 0x2e, 0xb5, 0xec, 0x68, 0xed, 0xfd, 0xf6, 0xfd, 0x39, 0x4a, 0xed,
	0xb4, 0x72, 0x8d, 0x6a, 0xcc, 0x36, 0xb7, 0x23, 0xba, 0x02, 0x9f, 0x3c, 0xfd, 0x9f, 0xf3, 0xe6,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x6a, 0xe4, 0xbd, 0x8c, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LandingServiceClient is the client API for LandingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LandingServiceClient interface {
	NewTeam(ctx context.Context, in *Team, opts ...grpc.CallOption) (*Response, error)
	GetTeams(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Teams, error)
	DeleteTeam(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
	NewPortfolio(ctx context.Context, in *Portfolio, opts ...grpc.CallOption) (*Response, error)
	GetPortfolios(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Portfolios, error)
	DeletePortfolio(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
	NewMix(ctx context.Context, in *Mix, opts ...grpc.CallOption) (*Response, error)
	GetMixes(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Mixes, error)
	DeleteMix(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
	NewBasic(ctx context.Context, in *Basic, opts ...grpc.CallOption) (*Response, error)
	GetBasic(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Basic, error)
	NewSector(ctx context.Context, in *Sector, opts ...grpc.CallOption) (*Response, error)
	GetSectors(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Sectors, error)
	DeleteSector(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
	NewNews(ctx context.Context, in *News, opts ...grpc.CallOption) (*Response, error)
	GetNews(ctx context.Context, in *Params, opts ...grpc.CallOption) (*NewsList, error)
	DeleteNews(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
}

type landingServiceClient struct {
	cc *grpc.ClientConn
}

func NewLandingServiceClient(cc *grpc.ClientConn) LandingServiceClient {
	return &landingServiceClient{cc}
}

func (c *landingServiceClient) NewTeam(ctx context.Context, in *Team, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/NewTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) GetTeams(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Teams, error) {
	out := new(Teams)
	err := c.cc.Invoke(ctx, "/LandingService/GetTeams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) DeleteTeam(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/DeleteTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) NewPortfolio(ctx context.Context, in *Portfolio, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/NewPortfolio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) GetPortfolios(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Portfolios, error) {
	out := new(Portfolios)
	err := c.cc.Invoke(ctx, "/LandingService/GetPortfolios", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) DeletePortfolio(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/DeletePortfolio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) NewMix(ctx context.Context, in *Mix, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/NewMix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) GetMixes(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Mixes, error) {
	out := new(Mixes)
	err := c.cc.Invoke(ctx, "/LandingService/GetMixes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) DeleteMix(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/DeleteMix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) NewBasic(ctx context.Context, in *Basic, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/NewBasic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) GetBasic(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Basic, error) {
	out := new(Basic)
	err := c.cc.Invoke(ctx, "/LandingService/GetBasic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) NewSector(ctx context.Context, in *Sector, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/NewSector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) GetSectors(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Sectors, error) {
	out := new(Sectors)
	err := c.cc.Invoke(ctx, "/LandingService/GetSectors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) DeleteSector(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/DeleteSector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) NewNews(ctx context.Context, in *News, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/NewNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) GetNews(ctx context.Context, in *Params, opts ...grpc.CallOption) (*NewsList, error) {
	out := new(NewsList)
	err := c.cc.Invoke(ctx, "/LandingService/GetNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *landingServiceClient) DeleteNews(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/LandingService/DeleteNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LandingServiceServer is the server API for LandingService service.
type LandingServiceServer interface {
	NewTeam(context.Context, *Team) (*Response, error)
	GetTeams(context.Context, *Params) (*Teams, error)
	DeleteTeam(context.Context, *Params) (*Response, error)
	NewPortfolio(context.Context, *Portfolio) (*Response, error)
	GetPortfolios(context.Context, *Params) (*Portfolios, error)
	DeletePortfolio(context.Context, *Params) (*Response, error)
	NewMix(context.Context, *Mix) (*Response, error)
	GetMixes(context.Context, *Params) (*Mixes, error)
	DeleteMix(context.Context, *Params) (*Response, error)
	NewBasic(context.Context, *Basic) (*Response, error)
	GetBasic(context.Context, *Params) (*Basic, error)
	NewSector(context.Context, *Sector) (*Response, error)
	GetSectors(context.Context, *Params) (*Sectors, error)
	DeleteSector(context.Context, *Params) (*Response, error)
	NewNews(context.Context, *News) (*Response, error)
	GetNews(context.Context, *Params) (*NewsList, error)
	DeleteNews(context.Context, *Params) (*Response, error)
}

// UnimplementedLandingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLandingServiceServer struct {
}

func (*UnimplementedLandingServiceServer) NewTeam(ctx context.Context, req *Team) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTeam not implemented")
}
func (*UnimplementedLandingServiceServer) GetTeams(ctx context.Context, req *Params) (*Teams, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeams not implemented")
}
func (*UnimplementedLandingServiceServer) DeleteTeam(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTeam not implemented")
}
func (*UnimplementedLandingServiceServer) NewPortfolio(ctx context.Context, req *Portfolio) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewPortfolio not implemented")
}
func (*UnimplementedLandingServiceServer) GetPortfolios(ctx context.Context, req *Params) (*Portfolios, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPortfolios not implemented")
}
func (*UnimplementedLandingServiceServer) DeletePortfolio(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePortfolio not implemented")
}
func (*UnimplementedLandingServiceServer) NewMix(ctx context.Context, req *Mix) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewMix not implemented")
}
func (*UnimplementedLandingServiceServer) GetMixes(ctx context.Context, req *Params) (*Mixes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMixes not implemented")
}
func (*UnimplementedLandingServiceServer) DeleteMix(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMix not implemented")
}
func (*UnimplementedLandingServiceServer) NewBasic(ctx context.Context, req *Basic) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBasic not implemented")
}
func (*UnimplementedLandingServiceServer) GetBasic(ctx context.Context, req *Params) (*Basic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBasic not implemented")
}
func (*UnimplementedLandingServiceServer) NewSector(ctx context.Context, req *Sector) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewSector not implemented")
}
func (*UnimplementedLandingServiceServer) GetSectors(ctx context.Context, req *Params) (*Sectors, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSectors not implemented")
}
func (*UnimplementedLandingServiceServer) DeleteSector(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSector not implemented")
}
func (*UnimplementedLandingServiceServer) NewNews(ctx context.Context, req *News) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewNews not implemented")
}
func (*UnimplementedLandingServiceServer) GetNews(ctx context.Context, req *Params) (*NewsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNews not implemented")
}
func (*UnimplementedLandingServiceServer) DeleteNews(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNews not implemented")
}

func RegisterLandingServiceServer(s *grpc.Server, srv LandingServiceServer) {
	s.RegisterService(&_LandingService_serviceDesc, srv)
}

func _LandingService_NewTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Team)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).NewTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/NewTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).NewTeam(ctx, req.(*Team))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_GetTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).GetTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/GetTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).GetTeams(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_DeleteTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).DeleteTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/DeleteTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).DeleteTeam(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_NewPortfolio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Portfolio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).NewPortfolio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/NewPortfolio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).NewPortfolio(ctx, req.(*Portfolio))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_GetPortfolios_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).GetPortfolios(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/GetPortfolios",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).GetPortfolios(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_DeletePortfolio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).DeletePortfolio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/DeletePortfolio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).DeletePortfolio(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_NewMix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mix)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).NewMix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/NewMix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).NewMix(ctx, req.(*Mix))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_GetMixes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).GetMixes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/GetMixes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).GetMixes(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_DeleteMix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).DeleteMix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/DeleteMix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).DeleteMix(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_NewBasic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Basic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).NewBasic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/NewBasic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).NewBasic(ctx, req.(*Basic))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_GetBasic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).GetBasic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/GetBasic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).GetBasic(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_NewSector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Sector)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).NewSector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/NewSector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).NewSector(ctx, req.(*Sector))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_GetSectors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).GetSectors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/GetSectors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).GetSectors(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_DeleteSector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).DeleteSector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/DeleteSector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).DeleteSector(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_NewNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(News)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).NewNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/NewNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).NewNews(ctx, req.(*News))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_GetNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).GetNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/GetNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).GetNews(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _LandingService_DeleteNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LandingServiceServer).DeleteNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LandingService/DeleteNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LandingServiceServer).DeleteNews(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

var _LandingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LandingService",
	HandlerType: (*LandingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewTeam",
			Handler:    _LandingService_NewTeam_Handler,
		},
		{
			MethodName: "GetTeams",
			Handler:    _LandingService_GetTeams_Handler,
		},
		{
			MethodName: "DeleteTeam",
			Handler:    _LandingService_DeleteTeam_Handler,
		},
		{
			MethodName: "NewPortfolio",
			Handler:    _LandingService_NewPortfolio_Handler,
		},
		{
			MethodName: "GetPortfolios",
			Handler:    _LandingService_GetPortfolios_Handler,
		},
		{
			MethodName: "DeletePortfolio",
			Handler:    _LandingService_DeletePortfolio_Handler,
		},
		{
			MethodName: "NewMix",
			Handler:    _LandingService_NewMix_Handler,
		},
		{
			MethodName: "GetMixes",
			Handler:    _LandingService_GetMixes_Handler,
		},
		{
			MethodName: "DeleteMix",
			Handler:    _LandingService_DeleteMix_Handler,
		},
		{
			MethodName: "NewBasic",
			Handler:    _LandingService_NewBasic_Handler,
		},
		{
			MethodName: "GetBasic",
			Handler:    _LandingService_GetBasic_Handler,
		},
		{
			MethodName: "NewSector",
			Handler:    _LandingService_NewSector_Handler,
		},
		{
			MethodName: "GetSectors",
			Handler:    _LandingService_GetSectors_Handler,
		},
		{
			MethodName: "DeleteSector",
			Handler:    _LandingService_DeleteSector_Handler,
		},
		{
			MethodName: "NewNews",
			Handler:    _LandingService_NewNews_Handler,
		},
		{
			MethodName: "GetNews",
			Handler:    _LandingService_GetNews_Handler,
		},
		{
			MethodName: "DeleteNews",
			Handler:    _LandingService_DeleteNews_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "landing/landing.proto",
}
