// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/services.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	"github.com/Beaxhem/manage/backend/internal/products"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Service struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Userid               string   `protobuf:"bytes,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Costpermeter         float32  `protobuf:"fixed32,4,opt,name=costpermeter,proto3" json:"costpermeter,omitempty"`
	Costperday           float32  `protobuf:"fixed32,5,opt,name=costperday,proto3" json:"costperday,omitempty"`
	Sector               string   `protobuf:"bytes,6,opt,name=sector,proto3" json:"sector,omitempty"`
	Costperservice       float32  `protobuf:"fixed32,7,opt,name=costperservice,proto3" json:"costperservice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{0}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *Service) GetCostpermeter() float32 {
	if m != nil {
		return m.Costpermeter
	}
	return 0
}

func (m *Service) GetCostperday() float32 {
	if m != nil {
		return m.Costperday
	}
	return 0
}

func (m *Service) GetSector() string {
	if m != nil {
		return m.Sector
	}
	return ""
}

func (m *Service) GetCostperservice() float32 {
	if m != nil {
		return m.Costperservice
	}
	return 0
}

type Params struct {
	Query                *products.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{1}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetQuery() *products.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Params) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type ServicesResponse struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ServicesResponse) Reset()         { *m = ServicesResponse{} }
func (m *ServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ServicesResponse) ProtoMessage()    {}
func (*ServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{3}
}

func (m *ServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServicesResponse.Unmarshal(m, b)
}
func (m *ServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServicesResponse.Marshal(b, m, deterministic)
}
func (m *ServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServicesResponse.Merge(m, src)
}
func (m *ServicesResponse) XXX_Size() int {
	return xxx_messageInfo_ServicesResponse.Size(m)
}
func (m *ServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServicesResponse proto.InternalMessageInfo

func (m *ServicesResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func init() {
	proto.RegisterType((*Service)(nil), "services.Service")
	proto.RegisterType((*Params)(nil), "services.Params")
	proto.RegisterType((*Response)(nil), "services.Response")
	proto.RegisterType((*ServicesResponse)(nil), "services.ServicesResponse")
}

func init() { proto.RegisterFile("services/services.proto", fileDescriptor_20616c573d3cd2a9) }

var fileDescriptor_20616c573d3cd2a9 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0xd3, 0x02, 0x05, 0xa7, 0x8a, 0x38, 0x07, 0xd9, 0xf4, 0x60, 0x48, 0x13, 0x0d, 0x17,
	0x21, 0x82, 0x9e, 0x3c, 0x18, 0x13, 0x8d, 0x37, 0xa3, 0xf5, 0x09, 0x6a, 0x3b, 0x87, 0x26, 0xc2,
	0xd6, 0xdd, 0x45, 0xc3, 0xbb, 0xf8, 0x42, 0xbe, 0x95, 0x61, 0xff, 0xb4, 0x6a, 0xf1, 0xe0, 0x6d,
	0xe6, 0xeb, 0xf7, 0xfb, 0xb2, 0xdf, 0xa4, 0x30, 0x94, 0x24, 0xde, 0x8a, 0x8c, 0xe4, 0xd4, 0x0d,
	0x93, 0x52, 0x70, 0xc5, 0xb1, 0xe7, 0xf6, 0x68, 0x58, 0x0a, 0x9e, 0xaf, 0x32, 0x25, 0xa7, 0x6e,
	0x30, 0x96, 0xf8, 0xd3, 0x83, 0xee, 0x93, 0x71, 0x61, 0x1f, 0xfc, 0x22, 0x67, 0xde, 0xc8, 0x1b,
	0xef, 0x24, 0x7e, 0x91, 0x23, 0x42, 0x7b, 0x99, 0x2e, 0x88, 0xf9, 0x5a, 0xd1, 0x33, 0x1e, 0x42,
	0xb0, 0x92, 0x24, 0x8a, 0x9c, 0xb5, 0xb4, 0x6a, 0x37, 0x8c, 0x61, 0x37, 0xe3, 0x52, 0x95, 0x24,
	0x16, 0xa4, 0x48, 0xb0, 0xf6, 0xc8, 0x1b, 0xfb, 0xc9, 0x0f, 0x0d, 0x8f, 0x00, 0xec, 0x9e, 0xa7,
	0x6b, 0xd6, 0xd1, 0x8e, 0x6f, 0xca, 0x26, 0x5b, 0x52, 0xa6, 0xb8, 0x60, 0x81, 0xc9, 0x36, 0x1b,
	0x9e, 0x40, 0xdf, 0xba, 0x6c, 0x1f, 0xd6, 0xd5, 0xec, 0x2f, 0x35, 0xbe, 0x82, 0xe0, 0x21, 0x15,
	0xe9, 0x42, 0xe2, 0x31, 0x74, 0x5e, 0x57, 0x24, 0xd6, 0xba, 0x4c, 0x38, 0xdb, 0x9f, 0x54, 0xad,
	0x1f, 0x37, 0x72, 0x62, 0xbe, 0xda, 0xc2, 0xbe, 0x2b, 0x1c, 0x03, 0xf4, 0x12, 0x92, 0x25, 0x5f,
	0x4a, 0x8a, 0xaf, 0x61, 0x60, 0xef, 0x22, 0x9d, 0x86, 0xa7, 0x50, 0x5d, 0x94, 0x79, 0xa3, 0xd6,
	0x38, 0x9c, 0x1d, 0x4c, 0xaa, 0x93, 0x5b, 0x77, 0x52, 0x59, 0x66, 0x1f, 0x3e, 0xf4, 0x5c, 0x06,
	0x9e, 0x01, 0xdc, 0x91, 0x72, 0xa7, 0x1e, 0xd4, 0x9c, 0x79, 0x72, 0xd4, 0x4c, 0xc2, 0x4b, 0x08,
	0x6b, 0x44, 0x6e, 0x61, 0xa2, 0x06, 0x53, 0xbf, 0x75, 0x0e, 0x70, 0x4f, 0xef, 0x2e, 0xaa, 0x99,
	0x1e, 0x61, 0x2d, 0x55, 0xd0, 0x39, 0x84, 0xb7, 0x79, 0xa1, 0xfe, 0x49, 0x5d, 0xc0, 0xde, 0x0d,
	0xbd, 0x90, 0xa2, 0xbf, 0xdb, 0x6d, 0xc1, 0x9e, 0x03, 0xfd, 0x07, 0xce, 0xbf, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x5c, 0xd3, 0x7f, 0xea, 0xbf, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServicesClient is the client API for Services service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicesClient interface {
	GetService(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Service, error)
	GetServices(ctx context.Context, in *Params, opts ...grpc.CallOption) (*ServicesResponse, error)
	NewService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Response, error)
	EditService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Response, error)
	DeleteService(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error)
}

type servicesClient struct {
	cc *grpc.ClientConn
}

func NewServicesClient(cc *grpc.ClientConn) ServicesClient {
	return &servicesClient{cc}
}

func (c *servicesClient) GetService(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/services.Services/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) GetServices(ctx context.Context, in *Params, opts ...grpc.CallOption) (*ServicesResponse, error) {
	out := new(ServicesResponse)
	err := c.cc.Invoke(ctx, "/services.Services/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) NewService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/services.Services/NewService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) EditService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/services.Services/EditService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) DeleteService(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/services.Services/DeleteService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicesServer is the server API for Services service.
type ServicesServer interface {
	GetService(context.Context, *Params) (*Service, error)
	GetServices(context.Context, *Params) (*ServicesResponse, error)
	NewService(context.Context, *Service) (*Response, error)
	EditService(context.Context, *Service) (*Response, error)
	DeleteService(context.Context, *Params) (*Response, error)
}

// UnimplementedServicesServer can be embedded to have forward compatible implementations.
type UnimplementedServicesServer struct {
}

func (*UnimplementedServicesServer) GetService(ctx context.Context, req *Params) (*Service, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetService not implemented")
}
func (*UnimplementedServicesServer) GetServices(ctx context.Context, req *Params) (*ServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServices not implemented")
}
func (*UnimplementedServicesServer) NewService(ctx context.Context, req *Service) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewService not implemented")
}
func (*UnimplementedServicesServer) EditService(ctx context.Context, req *Service) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditService not implemented")
}
func (*UnimplementedServicesServer) DeleteService(ctx context.Context, req *Params) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteService not implemented")
}

func RegisterServicesServer(s *grpc.Server, srv ServicesServer) {
	s.RegisterService(&_Services_serviceDesc, srv)
}

func _Services_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Services/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).GetService(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Services/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).GetServices(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_NewService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).NewService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Services/NewService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).NewService(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_EditService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).EditService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Services/EditService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).EditService(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Services/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).DeleteService(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

var _Services_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.Services",
	HandlerType: (*ServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetService",
			Handler:    _Services_GetService_Handler,
		},
		{
			MethodName: "GetServices",
			Handler:    _Services_GetServices_Handler,
		},
		{
			MethodName: "NewService",
			Handler:    _Services_NewService_Handler,
		},
		{
			MethodName: "EditService",
			Handler:    _Services_EditService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _Services_DeleteService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/services.proto",
}
